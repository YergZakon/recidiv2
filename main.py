"""
üö® –°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–Ω–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π
–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from datetime import datetime
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ò–º–ø–æ—Ä—Ç –∏–∑ –Ω–∞—à–∏—Ö –º–æ–¥—É–ª–µ–π
try:
    from utils.data_loader import (
        load_all_data, 
        get_crime_statistics, 
        calculate_statistics_summary,
        get_risk_data,
        get_pattern_distribution
    )
    from utils.risk_calculator import RiskCalculator
    from utils.forecasting import TimelineVisualizer
    MODULES_AVAILABLE = True
except ImportError:
    MODULES_AVAILABLE = False
    st.warning("‚ö†Ô∏è –ú–æ–¥—É–ª–∏ utils –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –†–∞–±–æ—Ç–∞–µ–º –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ.")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–Ω–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π",
    page_icon="üö®",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏
st.markdown("""
<style>
    .main-header {
        background: linear-gradient(90deg, #e74c3c, #c0392b);
        padding: 2rem;
        border-radius: 10px;
        text-align: center;
        color: white;
        margin-bottom: 2rem;
    }
    .metric-card {
        background-color: #f8f9fa;
        padding: 1.5rem;
        border-radius: 10px;
        text-align: center;
        border-left: 5px solid #e74c3c;
        margin: 1rem 0;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .big-number {
        font-size: 3rem;
        font-weight: bold;
        color: #e74c3c;
        margin: 0;
    }
    .metric-label {
        font-size: 1.1rem;
        color: #666;
        margin-top: 0.5rem;
    }
    .status-box {
        padding: 1rem;
        border-radius: 8px;
        margin: 0.5rem 0;
        text-align: center;
        font-weight: bold;
    }
    .status-critical { background-color: #f8d7da; color: #721c24; }
    .status-warning { background-color: #fff3cd; color: #856404; }
    .status-success { background-color: #d4edda; color: #155724; }
    .sidebar .sidebar-content { padding-top: 2rem; }
    .risk-indicator {
        display: inline-block;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        margin-right: 0.5rem;
    }
    .risk-critical { background-color: #e74c3c; }
    .risk-high { background-color: #f39c12; }
    .risk-medium { background-color: #fd7e14; }
    .risk-low { background-color: #27ae60; }
</style>
""", unsafe_allow_html=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö
@st.cache_data
def check_data_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö"""
    data_dir = "data"
    required_files = [
        "RISK_ANALYSIS_RESULTS.xlsx",
        "ML_DATASET_COMPLETE.xlsx", 
        "crime_analysis_results.xlsx",
        "serious_crimes_analysis.xlsx",
        "risk_escalation_matrix.xlsx"
    ]
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if not os.path.exists(data_dir):
        os.makedirs(data_dir)
    
    file_status = {}
    for file in required_files:
        file_path = os.path.join(data_dir, file)
        file_status[file] = os.path.exists(file_path)
    
    return file_status

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
@st.cache_data
def load_basic_stats():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    if MODULES_AVAILABLE:
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            stats = get_crime_statistics()
            return stats
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    return {
        "total_analyzed": 146570,
        "recidivists": 12333,
        "preventable_percent": 97.0,
        "avg_time_to_crime": 143,
        "unstable_pattern_percent": 72.7,
        "high_risk_count": 1856,
        "admin_to_theft": 6465,
        "crime_windows": {
            '–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ': {'days': 109, 'preventable': 82.3},
            '–ö—Ä–∞–∂–∞': {'days': 146, 'preventable': 87.3},
            '–£–±–∏–π—Å—Ç–≤–æ': {'days': 143, 'preventable': 97.0},
            '–í—ã–º–æ–≥–∞—Ç–µ–ª—å—Å—Ç–≤–æ': {'days': 144, 'preventable': 100.7},
            '–ì—Ä–∞–±–µ–∂': {'days': 148, 'preventable': 60.2},
            '–†–∞–∑–±–æ–π': {'days': 150, 'preventable': 20.2},
            '–ò–∑–Ω–∞—Å–∏–ª–æ–≤–∞–Ω–∏–µ': {'days': 157, 'preventable': 65.6}
        }
    }

# –ì–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
st.markdown("""
<div class="main-header">
    <h1>üö® –°–ò–°–¢–ï–ú–ê –†–ê–ù–ù–ï–ì–û –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø –ü–†–ï–°–¢–£–ü–õ–ï–ù–ò–ô</h1>
    <h3>–ê–Ω–∞–ª–∏–∑ 146,570 –ø—Ä–∞–≤–æ–Ω–∞—Ä—É—à–µ–Ω–∏–π | 12,333 —Ä–µ—Ü–∏–¥–∏–≤–∏—Å—Ç–æ–≤ | 97% –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã</h3>
</div>
""", unsafe_allow_html=True)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö
file_status = check_data_files()

# –ï—Å–ª–∏ –µ—Å—Ç—å –º–æ–¥—É–ª–∏, –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
real_data_loaded = False
if MODULES_AVAILABLE:
    try:
        all_data = load_all_data()
        if any(v is not None for v in all_data.values()):
            real_data_loaded = True
            st.success("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–æ–≤")
    except Exception as e:
        st.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ: {e}")

# –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
stats = load_basic_stats()

# –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
if real_data_loaded and MODULES_AVAILABLE:
    try:
        summary = calculate_statistics_summary()
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        if summary['total_people'] > 0:
            stats['recidivists'] = summary['total_people']
            stats['high_risk_count'] = summary['critical_risk'] + summary['high_risk']
    except:
        pass

st.subheader("üìä –ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è")

# –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –≤ 4 –∫–æ–ª–æ–Ω–∫–∏
col1, col2, col3, col4 = st.columns(4)

with col1:
    st.markdown(f"""
    <div class="metric-card">
        <div class="big-number">{stats.get('preventable_percent', 97):.0f}%</div>
        <div class="metric-label">—Ç—è–∂–∫–∏—Ö –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π<br>–∏–º–µ—é—Ç –ø—Ä–µ–¥—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤</div>
    </div>
    """, unsafe_allow_html=True)

with col2:
    st.markdown(f"""
    <div class="metric-card">
        <div class="big-number">{stats.get('avg_time_to_crime', 143)}</div>
        <div class="metric-label">–¥–Ω—è –≤ —Å—Ä–µ–¥–Ω–µ–º<br>–¥–æ —É–±–∏–π—Å—Ç–≤–∞</div>
    </div>
    """, unsafe_allow_html=True)

with col3:
    st.markdown(f"""
    <div class="metric-card">
        <div class="big-number">{stats.get('unstable_pattern_percent', 72.7):.1f}%</div>
        <div class="metric-label">–Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π<br>–ø–∞—Ç—Ç–µ—Ä–Ω –ø–æ–≤–µ–¥–µ–Ω–∏—è</div>
    </div>
    """, unsafe_allow_html=True)

with col4:
    st.markdown(f"""
    <div class="metric-card">
        <div class="big-number">{stats.get('admin_to_theft', 6465):,}</div>
        <div class="metric-label">–ø–µ—Ä–µ—Ö–æ–¥–æ–≤<br>–∞–¥–º–∏–Ω ‚Üí –∫—Ä–∞–∂–∞</div>
    </div>
    """, unsafe_allow_html=True)

# –°—Ç–∞—Ç—É—Å –¥–∞–Ω–Ω—ã—Ö
st.markdown("---")
st.subheader("üìÅ –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã")

col1, col2 = st.columns(2)

with col1:
    st.markdown("#### –§–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö:")
    files_ready = sum(file_status.values())
    total_files = len(file_status)
    
    # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
    progress = files_ready / total_files if total_files > 0 else 0
    st.progress(progress)
    st.write(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ {files_ready} –∏–∑ {total_files} —Ñ–∞–π–ª–æ–≤")
    
    # –î–µ—Ç–∞–ª–∏ –ø–æ —Ñ–∞–π–ª–∞–º
    with st.expander("–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ —Ñ–∞–π–ª–∞—Ö"):
        for file, exists in file_status.items():
            if exists:
                st.success(f"‚úÖ {file}")
            else:
                st.error(f"‚ùå {file}")

with col2:
    st.markdown("#### –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:")
    
    if files_ready == total_files and real_data_loaded:
        st.markdown('<div class="status-box status-success">üü¢ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ</div>', 
                   unsafe_allow_html=True)
    elif files_ready > 0 or real_data_loaded:
        st.markdown('<div class="status-box status-warning">üü° –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–∞—Å—Ç–∏—á–Ω–æ</div>', 
                   unsafe_allow_html=True)
    else:
        st.markdown('<div class="status-box status-critical">üî¥ –†–∞–±–æ—Ç–∞ –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ</div>', 
                   unsafe_allow_html=True)
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    st.write(f"**–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:** {'–†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ' if real_data_loaded else '–î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ'}")
    st.write(f"**–ú–æ–¥—É–ª–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:** {'‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω—ã' if MODULES_AVAILABLE else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã'}")

# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏
st.markdown("---")
st.subheader("üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")

col1, col2 = st.columns(2)

with col1:
    # –ì—Ä–∞—Ñ–∏–∫ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫–æ–Ω
    st.markdown("#### ‚è∞ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫–Ω–∞ –¥–æ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π")
    
    crime_windows = stats.get('crime_windows', {})
    if crime_windows:
        crimes_df = pd.DataFrame([
            {'–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ': crime, '–î–Ω–∏': data['days'], '–ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º–æ—Å—Ç—å': data['preventable']}
            for crime, data in crime_windows.items()
        ])
        crimes_df = crimes_df.sort_values('–î–Ω–∏')
        
        fig = px.bar(crimes_df, x='–î–Ω–∏', y='–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ', orientation='h',
                    color='–ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º–æ—Å—Ç—å',
                    color_continuous_scale='RdYlGn',
                    title='–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç –∞–¥–º–∏–Ω –Ω–∞—Ä—É—à–µ–Ω–∏—è –¥–æ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è',
                    labels={'–ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º–æ—Å—Ç—å': '% –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö'})
        fig.update_layout(height=400)
        st.plotly_chart(fig, use_container_width=True)

with col2:
    # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
    st.markdown("#### üîÑ –ü–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è")
    
    if real_data_loaded and MODULES_AVAILABLE:
        try:
            pattern_df = get_pattern_distribution()
            fig = px.pie(pattern_df, values='percent', names='pattern',
                        title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è',
                        color_discrete_sequence=px.colors.sequential.Reds)
        except:
            # –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ
            pattern_data = pd.DataFrame({
                'pattern': ['–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ', '–•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–∏', 
                           '–≠—Å–∫–∞–ª–∞—Ü–∏—è', '–î–µ—ç—Å–∫–∞–ª–∞—Ü–∏—è', '–ï–¥–∏–Ω–∏—á–Ω—ã–µ'],
                'percent': [72.7, 13.6, 7.0, 5.7, 1.0]
            })
            fig = px.pie(pattern_data, values='percent', names='pattern',
                        title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è',
                        color_discrete_sequence=px.colors.sequential.Reds)
    else:
        # –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ
        pattern_data = pd.DataFrame({
            'pattern': ['–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ', '–•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–∏', 
                       '–≠—Å–∫–∞–ª–∞—Ü–∏—è', '–î–µ—ç—Å–∫–∞–ª–∞—Ü–∏—è', '–ï–¥–∏–Ω–∏—á–Ω—ã–µ'],
            'percent': [72.7, 13.6, 7.0, 5.7, 1.0]
        })
        fig = px.pie(pattern_data, values='percent', names='pattern',
                    title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è',
                    color_discrete_sequence=px.colors.sequential.Reds)
    
    fig.update_layout(height=400)
    st.plotly_chart(fig, use_container_width=True)

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
st.markdown("---")
st.subheader("üß≠ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ —Å–∏—Å—Ç–µ–º—ã")

# –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
pages_info = [
    {
        "icon": "üó∫Ô∏è",
        "title": "–ö–∞—Ä—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫–æ–Ω",
        "description": "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–µ–∂—É—Ç–∫–æ–≤ –¥–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π",
        "status": "active"
    },
    {
        "icon": "üö¶",
        "title": "–°—Ç–∞—Ç—É—Å —Ä–µ–≥–∏–æ–Ω–æ–≤",
        "description": "–°–≤–µ—Ç–æ—Ñ–æ—Ä —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ä–∏—Å–∫–∞ –∏ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
        "status": "active"
    },
    {
        "icon": "üë•",
        "title": "–°–ø–∏—Å–∫–∏ –ª–∏—Ü —Ä–∏—Å–∫–∞",
        "description": "–ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –ª–∏—Ü —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —É—Ä–æ–≤–Ω—è–º–∏ —Ä–∏—Å–∫–∞ —Ä–µ—Ü–∏–¥–∏–≤–∞",
        "status": "active"
    },
    {
        "icon": "üîç",
        "title": "–ü–æ–∏—Å–∫ –ø–æ –ò–ò–ù",
        "description": "–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞ –∏ –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ª–∏—Ü—É",
        "status": "active"
    },
    {
        "icon": "‚è∞",
        "title": "–í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã",
        "description": "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫–æ–Ω –¥–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π",
        "status": "active"
    }
]

# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏
for i in range(0, len(pages_info), 2):
    col1, col2 = st.columns(2)
    
    for j, col in enumerate([col1, col2]):
        if i + j < len(pages_info):
            page = pages_info[i + j]
            with col:
                st.markdown(f"""
                <div style="
                    background-color: #f8f9fa;
                    padding: 1.5rem;
                    border-radius: 10px;
                    border-left: 5px solid {'#27ae60' if page['status'] == 'active' else '#e74c3c'};
                    margin: 0.5rem 0;
                    height: 120px;
                ">
                    <h4>{page['icon']} {page['title']}</h4>
                    <p style="color: #666; margin: 0;">{page['description']}</p>
                </div>
                """, unsafe_allow_html=True)

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
with st.sidebar:
    st.markdown("### üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    
    if stats:
        st.metric("–í—Å–µ–≥–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ", f"{stats.get('total_analyzed', 146570):,}")
        st.metric("–†–µ—Ü–∏–¥–∏–≤–∏—Å—Ç–æ–≤", f"{stats.get('recidivists', 12333):,}")
        st.metric("–õ–∏—Ü –≤—ã—Å–æ–∫–æ–≥–æ —Ä–∏—Å–∫–∞", f"{stats.get('high_risk_count', 1856):,}")
        
        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Ä–∏—Å–∫–∞
        st.markdown("---")
        st.markdown("### üéØ –£—Ä–æ–≤–Ω–∏ —Ä–∏—Å–∫–∞")
        
        risk_levels = [
            ("üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π", "7-10 –±–∞–ª–ª–æ–≤", "#e74c3c"),
            ("üü° –í—ã—Å–æ–∫–∏–π", "5-6 –±–∞–ª–ª–æ–≤", "#f39c12"),
            ("üü† –°—Ä–µ–¥–Ω–∏–π", "3-4 –±–∞–ª–ª–∞", "#fd7e14"),
            ("üü¢ –ù–∏–∑–∫–∏–π", "0-2 –±–∞–ª–ª–∞", "#27ae60")
        ]
        
        for level, range_text, color in risk_levels:
            st.markdown(f"""
            <div style="display: flex; align-items: center; margin: 0.5rem 0;">
                <div class="risk-indicator" style="background-color: {color};"></div>
                <span><b>{level}</b> ({range_text})</span>
            </div>
            """, unsafe_allow_html=True)
    
    st.markdown("---")
    st.markdown("### üéØ –ö–ª—é—á–µ–≤—ã–µ –≤—ã–≤–æ–¥—ã")
    st.markdown("""
    - **97%** —Ç—è–∂–∫–∏—Ö –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã
    - **143 –¥–Ω—è** - —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –¥–æ —É–±–∏–π—Å—Ç–≤–∞
    - **3-5 –º–µ—Å—è—Ü–µ–≤** - –æ–∫–Ω–æ –¥–ª—è –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞
    - **72.7%** –∏–º–µ—é—Ç –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω
    - **ROI 50x** - –≤–æ–∑–≤—Ä–∞—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
    """)
    
    st.markdown("---")
    st.markdown("### üìÅ –¢—Ä–µ–±—É–µ–º—ã–µ —Ñ–∞–π–ª—ã")
    st.markdown("""
    –î–ª—è –ø–æ–ª–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã —Ä–∞–∑–º–µ—Å—Ç–∏—Ç–µ –≤ –ø–∞–ø–∫–µ `data/`:
    - RISK_ANALYSIS_RESULTS.xlsx
    - ML_DATASET_COMPLETE.xlsx
    - crime_analysis_results.xlsx
    - serious_crimes_analysis.xlsx
    - risk_escalation_matrix.xlsx
    """)
    
    # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", use_container_width=True):
        st.cache_data.clear()
        st.rerun()
    
    st.markdown("---")
    st.markdown("### ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    st.markdown("**–í–µ—Ä—Å–∏—è:** 2.0")
    st.markdown("**–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:** " + datetime.now().strftime("%d.%m.%Y"))
    
    # –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    if st.button("üì• –≠–∫—Å–ø–æ—Ä—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", use_container_width=True):
        stats_df = pd.DataFrame([{
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–í—Å–µ–≥–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ',
            '–ó–Ω–∞—á–µ–Ω–∏–µ': stats.get('total_analyzed', 146570)
        }, {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–†–µ—Ü–∏–¥–∏–≤–∏—Å—Ç–æ–≤',
            '–ó–Ω–∞—á–µ–Ω–∏–µ': stats.get('recidivists', 12333)
        }, {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö',
            '–ó–Ω–∞—á–µ–Ω–∏–µ': f"{stats.get('preventable_percent', 97)}%"
        }, {
            '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å': '–°—Ä–µ–¥–Ω–∏–π –ø–∞—Ç—Ç–µ—Ä–Ω –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏',
            '–ó–Ω–∞—á–µ–Ω–∏–µ': f"{stats.get('unstable_pattern_percent', 72.7)}%"
        }])
        
        csv = stats_df.to_csv(index=False).encode('utf-8')
        st.download_button(
            label="–°–∫–∞—á–∞—Ç—å CSV",
            data=csv,
            file_name=f'statistics_{datetime.now().strftime("%Y%m%d_%H%M%S")}.csv',
            mime='text/csv'
        )

# –§—É—Ç–µ—Ä
st.markdown("---")
st.markdown("""
<div style='text-align: center; color: #666; padding: 2rem;'>
    <h4>üö® –°–∏—Å—Ç–µ–º–∞ —Ä–∞–Ω–Ω–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π</h4>
    <p>–û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ—Ü–∏–¥–∏–≤–∏–∑–º–µ</p>
    <p><strong>–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è –º–æ–∂–Ω–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å!</strong></p>
    <p style='font-size: 0.9em; margin-top: 1rem;'>
        –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è –ö–ü–°–∏–°–£ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω<br>
        ¬© 2025 –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã
    </p>
</div>
""", unsafe_allow_html=True)