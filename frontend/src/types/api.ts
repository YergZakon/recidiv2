/**
 * TypeScript —Ç–∏–ø—ã –¥–ª—è API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
 * –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Å—Ö–µ–º–∞–º Pydantic –∏–∑ backend/app/schemas/risk.py
 */

// –ë–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã
export type PatternType = 
  | 'mixed_unstable'     // 72.7% –≤—Å–µ—Ö —Å–ª—É—á–∞–µ–≤
  | 'chronic_criminal'   // 13.6% - –≤—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫  
  | 'escalating'         // 7% - –æ–ø–∞—Å–Ω–∞—è —Ç–µ–Ω–¥–µ–Ω—Ü–∏—è
  | 'deescalating'       // 5.7% - —Å–Ω–∏–∂–µ–Ω–∏–µ —Ä–∏—Å–∫–∞
  | 'single'             // 1% - –µ–¥–∏–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏
  | 'unknown';           // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω

export type RiskLevel = 
  | 'üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π'
  | 'üü° –í—ã—Å–æ–∫–∏–π' 
  | 'üü† –°—Ä–µ–¥–Ω–∏–π'
  | 'üü¢ –ù–∏–∑–∫–∏–π';

export type RiskCategory = 
  | '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π'
  | '–í—ã—Å–æ–∫–∏–π'
  | '–°—Ä–µ–¥–Ω–∏–π' 
  | '–ù–∏–∑–∫–∏–π';

export type ConfidenceLevel = 
  | '–í—ã—Å–æ–∫–∞—è'
  | '–°—Ä–µ–¥–Ω—è—è'
  | '–ù–∏–∑–∫–∞—è';

// –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞—Å—á–µ—Ç —Ä–∏—Å–∫–∞
export interface RiskCalculationRequest {
  iin?: string;                    // –ò–ò–ù —á–µ–ª–æ–≤–µ–∫–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  pattern_type: PatternType;       // –¢–∏–ø –ø–∞—Ç—Ç–µ—Ä–Ω–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è
  total_cases: number;             // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–ª
  criminal_count?: number;         // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≥–æ–ª–æ–≤–Ω—ã—Ö –¥–µ–ª
  admin_count?: number;            // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö
  days_since_last?: number;        // –î–Ω–µ–π —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞—Ä—É—à–µ–Ω–∏—è
  recidivism_rate?: number;        // –î–µ–ª –≤ –≥–æ–¥ (—Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—Ü–∏–¥–∏–≤–∞)
  current_age: number;             // –¢–µ–∫—É—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç
  age_at_first_violation?: number; // –í–æ–∑—Ä–∞—Å—Ç –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –Ω–∞—Ä—É—à–µ–Ω–∏–∏
  has_property?: 0 | 1;           // –ù–∞–ª–∏—á–∏–µ –∏–º—É—â–µ—Å—Ç–≤–∞
  has_job?: 0 | 1;                // –ù–∞–ª–∏—á–∏–µ —Ä–∞–±–æ—Ç—ã
  has_family?: 0 | 1;             // –ù–∞–ª–∏—á–∏–µ —Å–µ–º—å–∏
  substance_abuse?: 0 | 1;        // –ó–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –≤–µ—â–µ—Å—Ç–≤–∞–º–∏
  has_escalation?: 0 | 1;         // –ù–∞–ª–∏—á–∏–µ —ç—Å–∫–∞–ª–∞—Ü–∏–∏
  admin_to_criminal?: number;      // –ü–µ—Ä–µ—Ö–æ–¥—ã –æ—Ç –∞–¥–º–∏–Ω –∫ —É–≥–æ–ª–æ–≤–Ω—ã–º
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∏—Å–∫–∞
export interface RiskComponents {
  pattern: number;     // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–∞—Ç—Ç–µ—Ä–Ω–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è
  history: number;     // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π
  time: number;        // –í—Ä–µ–º–µ–Ω–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  age: number;         // –í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  social: number;      // –°–æ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
  escalation: number;  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —ç—Å–∫–∞–ª–∞—Ü–∏–∏
}

// –û—Ç–≤–µ—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ä–∞—Å—á–µ—Ç–∞ —Ä–∏—Å–∫–∞
export interface RiskCalculationResponse {
  risk_score: number;              // –†–∏—Å–∫-–±–∞–ª–ª –æ—Ç 0 –¥–æ 10
  risk_level: RiskLevel;           // –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ —Å —ç–º–æ–¥–∑–∏
  risk_category: RiskCategory;     // –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ä–∏—Å–∫–∞ –±–µ–∑ —ç–º–æ–¥–∑–∏
  recommendation: string;          // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å –ª–∏—Ü–æ–º
  components: RiskComponents;      // –†–∞–∑–±–∏–≤–∫–∞ –ø–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º
  person_data: Record<string, any>; // –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞—É–¥–∏—Ç–∞
  calculated_at: string;           // –í—Ä–µ–º—è —Ä–∞—Å—á–µ—Ç–∞ (ISO string)
}

// –ü—Ä–æ–≥–Ω–æ–∑ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è
export interface CrimeForecastItem {
  crime_type: string;              // –¢–∏–ø –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è
  days: number;                    // –î–Ω–µ–π –¥–æ —Å–æ–±—ã—Ç–∏—è (30-365)
  date: string;                    // –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–∞—è –¥–∞—Ç–∞ (ISO string)
  probability: number;             // –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö (5-95)
  confidence: ConfidenceLevel;     // –£—Ä–æ–≤–µ–Ω—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
  risk_level: string;              // –†–∏—Å–∫ –ø–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —à–∫–∞–ª–µ
  ci_lower: number;                // –ù–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
  ci_upper: number;                // –í–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
}

// –û—Ç–≤–µ—Ç —Å –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π
export interface CrimeForecastResponse {
  forecasts: CrimeForecastItem[];  // –°–ø–∏—Å–æ–∫ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
  person_iin?: string;             // –ò–ò–ù –ª–∏—Ü–∞
  total_forecasts: number;         // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
  calculated_at: string;           // –í—Ä–µ–º—è —Ä–∞—Å—á–µ—Ç–∞ (ISO string)
}

// –ë—ã—Å—Ç—Ä–∞—è –æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞
export interface QuickAssessmentResponse {
  risk_score: number;              // –†–∏—Å–∫-–±–∞–ª–ª –æ—Ç 0 –¥–æ 10
  risk_level: RiskLevel;           // –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞
  recommendation: string;          // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è
  components: RiskComponents;      // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∏—Å–∫–∞
  most_likely_crime?: CrimeForecastItem; // –ù–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω–æ–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ
  calculated_at: string;           // –í—Ä–µ–º—è —Ä–∞—Å—á–µ—Ç–∞
}

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
export interface RiskStatisticsResponse {
  total_analyzed: number;          // –í—Å–µ–≥–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π (146570)
  total_recidivists: number;       // –í—Å–µ–≥–æ —Ä–µ—Ü–∏–¥–∏–≤–∏—Å—Ç–æ–≤ (12333)
  preventable_crimes_percent: number; // –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π (97.0)
  risk_distribution: {
    critical: number;              // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ä–∏—Å–∫ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)
    high: number;                  // –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫
    medium: number;                // –°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫
    low: number;                   // –ù–∏–∑–∫–∏–π —Ä–∏—Å–∫
  };
  pattern_distribution: {
    mixed_unstable: number;        // –ù–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω (72.7%)
    chronic_criminal: number;      // –•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–∏ (13.6%)
    escalating: number;           // –≠—Å–∫–∞–ª–∏—Ä—É—é—â–∏–µ (7.0%)
    deescalating: number;         // –î–µ—ç—Å–∫–∞–ª–∏—Ä—É—é—â–∏–µ (5.7%)
    single: number;               // –ï–¥–∏–Ω–∏—á–Ω—ã–µ (1.0%)
  };
}

// –ü–∞–∫–µ—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å
export interface BatchRiskRequest {
  persons: RiskCalculationRequest[]; // –°–ø–∏—Å–æ–∫ –ª–∏—Ü –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ (–º–∞–∫—Å 100)
}

// –ü–∞–∫–µ—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
export interface BatchRiskResponse {
  results: RiskCalculationResponse[]; // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–æ–≤
  total_processed: number;            // –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
  errors: Array<{
    index: string;                    // –ò–Ω–¥–µ–∫—Å –∑–∞–ø–∏—Å–∏ —Å –æ—à–∏–±–∫–æ–π
    error: string;                    // –û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
  }>;
  calculated_at: string;              // –í—Ä–µ–º—è —Ä–∞—Å—á–µ—Ç–∞
}

// –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è
export interface PriorityCrime {
  crime_type: string;
  days: number;
  probability: number;
  confidence: ConfidenceLevel;
  risk_level: string;
  prevention_window: number;          // –û–∫–Ω–æ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ (–¥–Ω–∏)
  urgency: '–í—ã—Å–æ–∫–∞—è' | '–°—Ä–µ–¥–Ω—è—è' | '–ù–∏–∑–∫–∞—è';
}

export interface PriorityCrimesResponse {
  priority_crimes: PriorityCrime[];
  total_found: number;
  total_analyzed: number;
  min_probability_threshold: number;
  person_iin?: string;
  calculated_at: string;
}

// –ö–∞–ª–µ–Ω–¥–∞—Ä—å –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏
export interface PreventionCalendarMonth {
  month_name: string;                // –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞
  risks: Array<{
    crime_type: string;
    days: number;
    probability: number;
    confidence: ConfidenceLevel;
  }>;
  recommendations: string[];         // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–µ
  risk_level: '–í—ã—Å–æ–∫–∏–π' | '–°—Ä–µ–¥–Ω–∏–π' | '–ù–∏–∑–∫–∏–π';
}

export interface PreventionCalendarResponse {
  calendar: Record<string, PreventionCalendarMonth>; // –ö–ª—é—á: YYYY-MM
  person_iin?: string;
  planning_period_months: number;
  generated_at: string;
}

// –ë–∞–∑–æ–≤—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫–Ω–∞
export interface BaseTimeWindowsResponse {
  base_windows: Record<string, number>; // –¢–∏–ø –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è -> –¥–Ω–∏
  description: string;
  source: string;
  total_analyzed: number;
}

// API –æ—à–∏–±–∫–∏
export interface ApiError {
  detail: string | {
    message: string;
    errors: string[];
  };
  status?: number;
}

// Health check –æ—Ç–≤–µ—Ç
export interface HealthCheckResponse {
  status: 'healthy' | 'degraded' | 'unhealthy';
  timestamp: string;
  components: {
    constants_loaded: {
      status: string;
      total_analyzed: number;
      total_recidivists: number;
      weights_loaded: number;
      time_windows_loaded: number;
    };
    risk_calculation: {
      status: string;
      validation_working: boolean;
      test_calculation?: number;
    };
    crime_forecasting: {
      status: string;
      forecasts_generated: number;
      expected_forecasts: number;
    };
    api_endpoints: {
      risks_router: string;
      forecasts_router: string;
    };
  };
  performance: {
    test_calculation_completed: boolean;
    test_forecasting_completed: boolean;
  };
}

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API
export interface ApiInfoResponse {
  name: string;
  version: string;
  description: string;
  research_base: {
    total_analyzed: number;
    total_recidivists: number;
    preventable_percent: number;
  };
  endpoints: {
    risks: string;
    forecasts: string;
    docs: string;
    redoc: string;
  };
  status: string;
  timestamp: string;
}

// –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ç–∏–ø—ã
export type LoadingState = 'idle' | 'loading' | 'succeeded' | 'failed';

export interface ApiResponse<T> {
  data?: T;
  error?: ApiError;
  loading: boolean;
  timestamp?: string;
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API
export interface ApiConfig {
  baseURL: string;
  timeout: number;
  retries: number;
}

// –§–∏–ª—å—Ç—Ä—ã –¥–ª—è —Ç–∞–±–ª–∏—Ü
export interface TableFilters {
  risk_level?: RiskCategory[];
  pattern_type?: PatternType[];
  age_range?: [number, number];
  days_since_last?: number;
  search_query?: string;
}

// –ü–∞–≥–∏–Ω–∞—Ü–∏—è
export interface PaginationParams {
  page: number;
  limit: number;
  sort_by?: string;
  sort_order?: 'asc' | 'desc';
}

export interface PaginatedResponse<T> {
  items: T[];
  total: number;
  page: number;
  pages: number;
  has_next: boolean;
  has_prev: boolean;
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
export interface ExportRequest {
  format: 'csv' | 'excel' | 'pdf';
  filters?: TableFilters;
  columns?: string[];
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export interface UserPreferences {
  theme: 'light' | 'dark' | 'auto';
  language: 'ru' | 'en' | 'kz';
  notifications: boolean;
  default_filters: TableFilters;
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
export interface NotificationItem {
  id: string;
  type: 'info' | 'success' | 'warning' | 'error';
  title: string;
  message: string;
  timestamp: string;
  read: boolean;
  actions?: Array<{
    label: string;
    action: () => void;
  }>;
}

// –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
export interface PerformanceMetrics {
  api_response_time: number;       // ms
  render_time: number;             // ms
  bundle_size: number;             // bytes
  memory_usage: number;            // MB
}