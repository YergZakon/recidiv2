"""
üö¶ –°—Ç–∞—Ç—É—Å —Ä–µ–≥–∏–æ–Ω–æ–≤
–°–≤–µ—Ç–æ—Ñ–æ—Ä —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ä–∏—Å–∫–∞ –∏ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
"""

import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import numpy as np
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–°—Ç–∞—Ç—É—Å —Ä–µ–≥–∏–æ–Ω–æ–≤",
    page_icon="üö¶",
    layout="wide"
)

st.title("üö¶ –°—Ç–∞—Ç—É—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ä–∏—Å–∫–∞")
st.markdown("### –°–≤–µ—Ç–æ—Ñ–æ—Ä —Å—Ç–∞—Ç—É—Å–æ–≤ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ —É—Ä–æ–≤–Ω—è–º —Ä–∏—Å–∫–∞ —Ä–µ—Ü–∏–¥–∏–≤–∞")

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ —Ä–∏—Å–∫–∞—Ö
@st.cache_data
def load_risk_status_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç–∞—Ç—É—Å–µ —Ä–∏—Å–∫–æ–≤"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞ —Ä–∏—Å–∫–æ–≤
    risk_file = "data/RISK_ANALYSIS_RESULTS.xlsx"
    
    if os.path.exists(risk_file):
        try:
            df = pd.read_excel(risk_file)
            st.success("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ RISK_ANALYSIS_RESULTS.xlsx")
            return df
        except Exception as e:
            st.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    np.random.seed(42)
    n_people = 12333  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ü–∏–¥–∏–≤–∏—Å—Ç–æ–≤ –∏–∑ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    
    # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
    demo_data = {
        '–ò–ò–ù': [f"***-***-{str(i).zfill(4)}" for i in range(1, n_people + 1)],
        'current_age': np.random.normal(35, 12, n_people).clip(18, 70).astype(int),
        'pattern_type': np.random.choice([
            'mixed_unstable', 'chronic_criminal', 'escalating', 'deescalating', 'single'
        ], n_people, p=[0.727, 0.136, 0.07, 0.057, 0.01]),
        'total_cases': np.random.poisson(4, n_people) + 1,
        'criminal_count': np.random.poisson(1.5, n_people),
        'admin_count': np.random.poisson(2.5, n_people),
        'risk_total_risk_score': np.random.beta(2, 5, n_people) * 10
    }
    
    df = pd.DataFrame(demo_data)
    st.info("‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è")
    return df

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∏—Å–∫–∞
def get_risk_category(risk_score):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∏—Å–∫–∞ –ø–æ –±–∞–ª–ª—É"""
    if risk_score >= 7:
        return "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π"
    elif risk_score >= 5:
        return "–í—ã—Å–æ–∫–∏–π" 
    elif risk_score >= 3:
        return "–°—Ä–µ–¥–Ω–∏–π"
    else:
        return "–ù–∏–∑–∫–∏–π"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∏—Å–∫–∞
def get_risk_emoji(category):
    """–ü–æ–ª—É—á–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∏—Å–∫–∞"""
    emoji_map = {
        "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π": "üî¥",
        "–í—ã—Å–æ–∫–∏–π": "üü°",
        "–°—Ä–µ–¥–Ω–∏–π": "üü†",
        "–ù–∏–∑–∫–∏–π": "üü¢"
    }
    return emoji_map.get(category, "")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Å —ç–º–æ–¥–∑–∏
def get_risk_display_name(category):
    """–ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å —ç–º–æ–¥–∑–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    emoji = get_risk_emoji(category)
    return f"{emoji} {category}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
def get_category_status(percentage):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç—É –ª—é–¥–µ–π –≤ –Ω–µ–π"""
    if percentage > 30:
        return "üî¥ –ö—Ä–∏—Ç–∏—á–Ω–æ"
    elif percentage > 15:
        return "üü° –í–Ω–∏–º–∞–Ω–∏–µ"
    else:
        return "üü¢ –ù–æ—Ä–º–∞"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
risk_df = load_risk_status_data()

if risk_df is not None and len(risk_df) > 0:
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∏—Å–∫–∞
    if 'risk_total_risk_score' in risk_df.columns:
        risk_df['risk_category'] = risk_df['risk_total_risk_score'].apply(get_risk_category)
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç —Ä–∏—Å–∫-–±–∞–ª–ª–∞, —Å–æ–∑–¥–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        risk_df['risk_category'] = np.random.choice([
            "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π", "–í—ã—Å–æ–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–ù–∏–∑–∫–∏–π"
        ], len(risk_df), p=[0.15, 0.25, 0.35, 0.25])
    
    # –°–≤–µ—Ç–æ—Ñ–æ—Ä —Å—Ç–∞—Ç—É—Å–æ–≤ - –æ—Å–Ω–æ–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å
    st.subheader("üö¶ –°–≤–µ—Ç–æ—Ñ–æ—Ä —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ä–∏—Å–∫–∞")
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    category_stats = risk_df['risk_category'].value_counts()
    total_people = len(risk_df)
    
    # –°–æ–∑–¥–∞–µ–º 4 –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    col1, col2, col3, col4 = st.columns(4)
    
    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å
    with col1:
        critical_count = category_stats.get("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π", 0)
        critical_percent = (critical_count / total_people) * 100
        status = get_category_status(critical_percent)
        
        st.markdown(f"""
        <div style="
            background-color: #f8d7da; 
            border: 3px solid #dc3545; 
            padding: 20px; 
            border-radius: 10px; 
            text-align: center;
            height: 200px;
            display: flex;
            flex-direction: column;
            justify-content: center;
        ">
            <h3>üî¥ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô</h3>
            <h2 style="color: #dc3545; margin: 10px 0;">{critical_count:,}</h2>
            <p><strong>{critical_percent:.1f}%</strong> –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞</p>
            <p>–†–∏—Å–∫-–±–∞–ª–ª: 7-10</p>
            <p><strong>{status}</strong></p>
        </div>
        """, unsafe_allow_html=True)
    
    # –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å
    with col2:
        high_count = category_stats.get("–í—ã—Å–æ–∫–∏–π", 0)
        high_percent = (high_count / total_people) * 100
        status = get_category_status(high_percent)
        
        st.markdown(f"""
        <div style="
            background-color: #fff3cd; 
            border: 3px solid #ffc107; 
            padding: 20px; 
            border-radius: 10px; 
            text-align: center;
            height: 200px;
            display: flex;
            flex-direction: column;
            justify-content: center;
        ">
            <h3>üü° –í–´–°–û–ö–ò–ô</h3>
            <h2 style="color: #856404; margin: 10px 0;">{high_count:,}</h2>
            <p><strong>{high_percent:.1f}%</strong> –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞</p>
            <p>–†–∏—Å–∫-–±–∞–ª–ª: 5-6</p>
            <p><strong>{status}</strong></p>
        </div>
        """, unsafe_allow_html=True)
    
    # –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å
    with col3:
        medium_count = category_stats.get("–°—Ä–µ–¥–Ω–∏–π", 0)
        medium_percent = (medium_count / total_people) * 100
        status = get_category_status(medium_percent)
        
        st.markdown(f"""
        <div style="
            background-color: #e2e3e5; 
            border: 3px solid #fd7e14; 
            padding: 20px; 
            border-radius: 10px; 
            text-align: center;
            height: 200px;
            display: flex;
            flex-direction: column;
            justify-content: center;
        ">
            <h3>üü† –°–†–ï–î–ù–ò–ô</h3>
            <h2 style="color: #fd7e14; margin: 10px 0;">{medium_count:,}</h2>
            <p><strong>{medium_percent:.1f}%</strong> –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞</p>
            <p>–†–∏—Å–∫-–±–∞–ª–ª: 3-4</p>
            <p><strong>{status}</strong></p>
        </div>
        """, unsafe_allow_html=True)
    
    # –ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å
    with col4:
        low_count = category_stats.get("–ù–∏–∑–∫–∏–π", 0)
        low_percent = (low_count / total_people) * 100
        status = "üü¢ –•–æ—Ä–æ—à–æ"  # –î–ª—è –Ω–∏–∑–∫–æ–≥–æ —Ä–∏—Å–∫–∞ –≤—Å–µ–≥–¥–∞ —Ö–æ—Ä–æ—à–æ
        
        st.markdown(f"""
        <div style="
            background-color: #d4edda; 
            border: 3px solid #28a745; 
            padding: 20px; 
            border-radius: 10px; 
            text-align: center;
            height: 200px;
            display: flex;
            flex-direction: column;
            justify-content: center;
        ">
            <h3>üü¢ –ù–ò–ó–ö–ò–ô</h3>
            <h2 style="color: #28a745; margin: 10px 0;">{low_count:,}</h2>
            <p><strong>{low_percent:.1f}%</strong> –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞</p>
            <p>–†–∏—Å–∫-–±–∞–ª–ª: 0-2</p>
            <p><strong>{status}</strong></p>
        </div>
        """, unsafe_allow_html=True)
    
    # –û–±—â–∞—è —Å–≤–æ–¥–∫–∞
    st.markdown("---")
    st.subheader("üìä –û–±—â–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
    
    col1, col2 = st.columns(2)
    
    with col1:
        # –ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
        fig_pie = px.pie(
            values=category_stats.values,
            names=category_stats.index,
            title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ä–∏—Å–∫–∞",
            color_discrete_map={
                "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π": "#dc3545",
                "–í—ã—Å–æ–∫–∏–π": "#ffc107", 
                "–°—Ä–µ–¥–Ω–∏–π": "#fd7e14",
                "–ù–∏–∑–∫–∏–π": "#28a745"
            }
        )
        fig_pie.update_layout(height=400)
        st.plotly_chart(fig_pie, use_container_width=True)
    
    with col2:
        # –°—Ç–æ–ª–±—á–∞—Ç–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        fig_bar = px.bar(
            x=category_stats.index,
            y=category_stats.values,
            title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º",
            color=category_stats.index,
            color_discrete_map={
                "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π": "#dc3545",
                "–í—ã—Å–æ–∫–∏–π": "#ffc107", 
                "–°—Ä–µ–¥–Ω–∏–π": "#fd7e14",
                "–ù–∏–∑–∫–∏–π": "#28a745"
            }
        )
        fig_bar.update_layout(
            height=400,
            xaxis_title="–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ä–∏—Å–∫–∞",
            yaxis_title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π",
            showlegend=False
        )
        st.plotly_chart(fig_bar, use_container_width=True)
    
    # –ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –ø–æ–≤–µ–¥–µ–Ω–∏—è
    if 'pattern_type' in risk_df.columns:
        st.subheader("üîÑ –ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –ø–æ–≤–µ–¥–µ–Ω–∏—è")
        
        pattern_stats = risk_df['pattern_type'].value_counts()
        
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
        pattern_translation = {
            'mixed_unstable': '–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ',
            'chronic_criminal': '–•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–∏', 
            'escalating': '–≠—Å–∫–∞–ª–∞—Ü–∏—è (–∞–¥–º–∏–Ω‚Üí—É–≥–æ–ª–æ–≤–∫–∞)',
            'deescalating': '–î–µ—ç—Å–∫–∞–ª–∞—Ü–∏—è',
            'single': '–ï–¥–∏–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏'
        }
        
        pattern_stats.index = pattern_stats.index.map(pattern_translation)
        
        fig_patterns = px.bar(
            x=pattern_stats.values,
            y=pattern_stats.index,
            orientation='h',
            title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è",
            color=pattern_stats.values,
            color_continuous_scale='Reds'
        )
        fig_patterns.update_layout(
            height=400,
            xaxis_title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π",
            yaxis_title="–¢–∏–ø –ø–∞—Ç—Ç–µ—Ä–Ω–∞"
        )
        st.plotly_chart(fig_patterns, use_container_width=True)
    
    # –í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –∞–Ω–∞–ª–∏–∑
    if 'current_age' in risk_df.columns:
        st.subheader("üë• –í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –∞–Ω–∞–ª–∏–∑ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ä–∏—Å–∫–∞")
        
        fig_age = px.box(
            risk_df,
            x='risk_category',
            y='current_age',
            title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ä–∏—Å–∫–∞",
            color='risk_category',
            color_discrete_map={
                "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π": "#dc3545",
                "–í—ã—Å–æ–∫–∏–π": "#ffc107", 
                "–°—Ä–µ–¥–Ω–∏–π": "#fd7e14",
                "–ù–∏–∑–∫–∏–π": "#28a745"
            }
        )
        fig_age.update_layout(
            height=400,
            xaxis_title="–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ä–∏—Å–∫–∞",
            yaxis_title="–í–æ–∑—Ä–∞—Å—Ç",
            showlegend=False
        )
        st.plotly_chart(fig_age, use_container_width=True)
    
    # –¢–∞–±–ª–∏—Ü–∞ —Å–≤–æ–¥–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    st.subheader("üìã –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
    
    summary_stats = []
    for category in ["–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π", "–í—ã—Å–æ–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–ù–∏–∑–∫–∏–π"]:
        category_data = risk_df[risk_df['risk_category'] == category]
        
        if len(category_data) > 0:
            stats = {
                "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": category,
                "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": len(category_data),
                "–ü—Ä–æ—Ü–µ–Ω—Ç": f"{len(category_data)/total_people*100:.1f}%",
                "–°—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç": f"{category_data['current_age'].mean():.1f}" if 'current_age' in category_data.columns else "N/A",
                "–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª-–≤–æ –¥–µ–ª": f"{category_data['total_cases'].mean():.1f}" if 'total_cases' in category_data.columns else "N/A",
                "–°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫-–±–∞–ª–ª": f"{category_data['risk_total_risk_score'].mean():.2f}" if 'risk_total_risk_score' in category_data.columns else "N/A"
            }
            summary_stats.append(stats)
    
    if summary_stats:
        summary_df = pd.DataFrame(summary_stats)
        st.dataframe(summary_df, use_container_width=True, hide_index=True)
        
        # –≠–∫—Å–ø–æ—Ä—Ç —Å–≤–æ–¥–∫–∏
        csv = summary_df.to_csv(index=False).encode('utf-8')
        st.download_button(
            label="üì• –°–∫–∞—á–∞—Ç—å —Å–≤–æ–¥–∫—É –≤ CSV",
            data=csv,
            file_name=f'risk_categories_summary_{pd.Timestamp.now().strftime("%Y%m%d_%H%M%S")}.csv',
            mime='text/csv'
        )

else:
    st.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ä–∏—Å–∫–∞—Ö")
    
    st.markdown("""
    ### üìÅ –¢—Ä–µ–±—É–µ–º—ã–µ —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö:
    –†–∞–∑–º–µ—Å—Ç–∏—Ç–µ –≤ –ø–∞–ø–∫–µ `data/`:
    - `RISK_ANALYSIS_RESULTS.xlsx` (—Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞ —Ä–∏—Å–∫–æ–≤)
    
    ### üìä –§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö:
    –§–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–ª–æ–Ω–∫–∏:
    - –ò–ò–ù
    - risk_total_risk_score (—Ä–∏—Å–∫-–±–∞–ª–ª –æ—Ç 0 –¥–æ 10)
    - pattern_type (—Ç–∏–ø –ø–∞—Ç—Ç–µ—Ä–Ω–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è)
    - current_age (—Ç–µ–∫—É—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç)
    - total_cases (–æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–ª)
    """)

# –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
with st.expander("‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"):
    st.markdown("""
    **–ß—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞:**
    - –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ª—é–¥–µ–π –ø–æ 4 –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º —Ä–∏—Å–∫–∞
    - –°–≤–µ—Ç–æ—Ñ–æ—Ä —Å—Ç–∞—Ç—É—Å–æ–≤ (–∫—Ä–∏—Ç–∏—á–Ω–æ/–≤–Ω–∏–º–∞–Ω–∏–µ/–Ω–æ—Ä–º–∞)
    - –ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è
    - –í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –∞–Ω–∞–ª–∏–∑ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    
    **–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∏—Å–∫–∞:**
    - üî¥ **–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π (7-10 –±–∞–ª–ª–æ–≤)**: –¢—Ä–µ–±—É–µ—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞
    - üü° **–í—ã—Å–æ–∫–∏–π (5-6 –±–∞–ª–ª–æ–≤)**: –¢—Ä–µ–±—É–µ—Ç —É—Å–∏–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
    - üü† **–°—Ä–µ–¥–Ω–∏–π (3-4 –±–∞–ª–ª–∞)**: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    - üü¢ **–ù–∏–∑–∫–∏–π (0-2 –±–∞–ª–ª–∞)**: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å
    
    **–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤:**
    - üî¥ **–ö—Ä–∏—Ç–∏—á–Ω–æ**: >30% –ª—é–¥–µ–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - —Ç—Ä–µ–±—É—é—Ç—Å—è —Å—Ä–æ—á–Ω—ã–µ –º–µ—Ä—ã
    - üü° **–í–Ω–∏–º–∞–Ω–∏–µ**: 15-30% –ª—é–¥–µ–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - —É—Å–∏–ª–∏—Ç—å —Ä–∞–±–æ—Ç—É
    - üü¢ **–ù–æ—Ä–º–∞**: <15% –ª—é–¥–µ–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ - —Å–∏—Ç—É–∞—Ü–∏—è –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º
    """)
