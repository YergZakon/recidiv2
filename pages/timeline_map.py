"""
–ö–∞—Ä—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫–æ–Ω
–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–µ–∂—É—Ç–∫–æ–≤ –¥–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π
"""

import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import numpy as np
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ö–∞—Ä—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫–æ–Ω",
    page_icon="üó∫Ô∏è",
    layout="wide"
)

st.title("üó∫Ô∏è –ö–∞—Ä—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫–æ–Ω –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π")
st.markdown("### –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–µ–∂—É—Ç–∫–æ–≤ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –Ω–∞—Ä—É—à–µ–Ω–∏–π –¥–æ —Ç—è–∂–∫–∏—Ö –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π")

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
@st.cache_data
def load_crime_timeline_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫–Ω–∞—Ö –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞
    crime_file = "data/crime_analysis_results.xlsx"
    
    if os.path.exists(crime_file):
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞–∑–Ω—ã–µ –ª–∏—Å—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è timeline
            with pd.ExcelFile(crime_file) as excel_file:
                sheets = excel_file.sheet_names
                st.success(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ crime_analysis_results.xlsx (–ª–∏—Å—Ç—ã: {sheets})")
                
                # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ª–∏—Å—Ç —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –∏—Ö –∏–∑ —ç—Å–∫–∞–ª–∞—Ü–∏–∏
                escalation_data = None
                if "–≠—Å–∫–∞–ª–∞—Ü–∏—è" in sheets:
                    escalation_df = pd.read_excel(crime_file, sheet_name="–≠—Å–∫–∞–ª–∞—Ü–∏—è")
                    
                    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ —ç—Å–∫–∞–ª–∞—Ü–∏–∏ –≤ timeline
                    if not escalation_df.empty and '–£–≥–æ–ª–æ–≤–Ω–æ–µ' in escalation_df.columns:
                        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º —É–≥–æ–ª–æ–≤–Ω—ã—Ö –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π
                        crime_counts = escalation_df.groupby('–£–≥–æ–ª–æ–≤–Ω–æ–µ')['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤'].sum().reset_index()
                        
                        # –ë–∞–∑–æ–≤—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫–Ω–∞ –∏–∑ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
                        time_windows = {
                            '–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ': 109,
                            '–ö—Ä–∞–∂–∞': 146, 
                            '–£–±–∏–π—Å—Ç–≤–æ': 143,
                            '–í—ã–º–æ–≥–∞—Ç–µ–ª—å—Å—Ç–≤–æ': 144,
                            '–ì—Ä–∞–±–µ–∂': 148,
                            '–†–∞–∑–±–æ–π': 150,
                            '–ò–∑–Ω–∞—Å–∏–ª–æ–≤–∞–Ω–∏–µ': 157,
                            '–•—É–ª–∏–≥–∞–Ω—Å—Ç–≤–æ': 155,
                            '–ü–æ–±–æ–∏': 140
                        }
                        
                        # –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º–æ—Å—Ç–∏
                        prevention_rates = {
                            '–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ': 82.3,
                            '–ö—Ä–∞–∂–∞': 87.3,
                            '–£–±–∏–π—Å—Ç–≤–æ': 97.0,
                            '–í—ã–º–æ–≥–∞—Ç–µ–ª—å—Å—Ç–≤–æ': 100.7,
                            '–ì—Ä–∞–±–µ–∂': 60.2,
                            '–†–∞–∑–±–æ–π': 20.2,
                            '–ò–∑–Ω–∞—Å–∏–ª–æ–≤–∞–Ω–∏–µ': 65.6,
                            '–•—É–ª–∏–≥–∞–Ω—Å—Ç–≤–æ': 45.0,
                            '–ü–æ–±–æ–∏': 75.0
                        }
                        
                        # –°–æ–∑–¥–∞–µ–º timeline –¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —ç—Å–∫–∞–ª–∞—Ü–∏–∏
                        timeline_data = []
                        for _, row in crime_counts.iterrows():
                            crime_type = row['–£–≥–æ–ª–æ–≤–Ω–æ–µ']
                            count = row['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤']
                            
                            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ
                            days = time_windows.get(crime_type, 140)  # 140 –¥–Ω–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                            
                            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º–æ—Å—Ç–∏
                            prevention = prevention_rates.get(crime_type, 60.0)
                            
                            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∏—Å–∫–∞
                            if count > 1000:
                                risk_category = '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π'
                            elif count > 500:
                                risk_category = '–í—ã—Å–æ–∫–∏–π'
                            elif count > 100:
                                risk_category = '–°—Ä–µ–¥–Ω–∏–π'
                            else:
                                risk_category = '–ù–∏–∑–∫–∏–π'
                            
                            timeline_data.append({
                                '–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ': crime_type,
                                '–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π': days,
                                '–ü—Ä–æ—Ü–µ–Ω—Ç_–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö': prevention,
                                '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å–ª—É—á–∞–µ–≤': count,
                                '–ö–∞—Ç–µ–≥–æ—Ä–∏—è_—Ä–∏—Å–∫–∞': risk_category
                            })
                        
                        if timeline_data:
                            df = pd.DataFrame(timeline_data)
                            st.info(f"üìä –°–æ–∑–¥–∞–Ω timeline –∏–∑ {len(timeline_data)} —Ç–∏–ø–æ–≤ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö —ç—Å–∫–∞–ª–∞—Ü–∏–∏")
                            return df
                
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–∑ —ç—Å–∫–∞–ª–∞—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
                st.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å timeline –∏–∑ —Ñ–∞–π–ª–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
                
        except Exception as e:
            st.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    timeline_data = {
        '–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ': [
            '–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ', '–ö—Ä–∞–∂–∞', '–£–±–∏–π—Å—Ç–≤–æ', '–í—ã–º–æ–≥–∞—Ç–µ–ª—å—Å—Ç–≤–æ', 
            '–ì—Ä–∞–±–µ–∂', '–†–∞–∑–±–æ–π', '–ò–∑–Ω–∞—Å–∏–ª–æ–≤–∞–Ω–∏–µ'
        ],
        '–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π': [109, 146, 143, 144, 148, 150, 157],
        '–ü—Ä–æ—Ü–µ–Ω—Ç_–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö': [82.3, 87.3, 97.0, 100.7, 60.2, 20.2, 65.6],
        '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å–ª—É—á–∞–µ–≤': [8832, 25201, 406, 564, 4130, 718, 299],
        '–ö–∞—Ç–µ–≥–æ—Ä–∏—è_—Ä–∏—Å–∫–∞': [
            '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π', '–í—ã—Å–æ–∫–∏–π', '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π', '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π',
            '–°—Ä–µ–¥–Ω–∏–π', '–°—Ä–µ–¥–Ω–∏–π', '–í—ã—Å–æ–∫–∏–π'
        ]
    }
    
    df = pd.DataFrame(timeline_data)
    st.info("‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∏–∑ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (–¥–µ–º–æ-—Ä–µ–∂–∏–º)")
    return df

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
timeline_df = load_crime_timeline_data()

if timeline_df is not None and len(timeline_df) > 0:
    
    # –§–∏–ª—å—Ç—Ä—ã –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    st.sidebar.header("üéõÔ∏è –§–∏–ª—å—Ç—Ä—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    
    # –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è
    if '–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ' in timeline_df.columns:
        selected_crimes = st.sidebar.multiselect(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø—ã –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π:",
            options=timeline_df['–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ'].unique(),
            default=timeline_df['–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ'].unique()
        )
        filtered_df = timeline_df[timeline_df['–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ'].isin(selected_crimes)]
    else:
        filtered_df = timeline_df
    
    # –§–∏–ª—å—Ç—Ä –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    if '–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π' in filtered_df.columns:
        min_days = int(filtered_df['–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π'].min())
        max_days = int(filtered_df['–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π'].max())
        
        time_range = st.sidebar.slider(
            "–î–∏–∞–ø–∞–∑–æ–Ω –≤—Ä–µ–º–µ–Ω–∏ (–¥–Ω–∏):",
            min_value=min_days,
            max_value=max_days,
            value=(min_days, max_days)
        )
        
        filtered_df = filtered_df[
            (filtered_df['–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π'] >= time_range[0]) &
            (filtered_df['–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π'] <= time_range[1])
        ]
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è - Bubble Chart
    st.subheader("üìä –ö–∞—Ä—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫–æ–Ω (Bubble Chart)")
    
    if len(filtered_df) > 0:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–ª–æ–Ω–æ–∫
        required_columns = ['–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ', '–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π', '–ü—Ä–æ—Ü–µ–Ω—Ç_–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å–ª—É—á–∞–µ–≤']
        missing_columns = [col for col in required_columns if col not in filtered_df.columns]
        
        if missing_columns:
            st.error(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–ª–æ–Ω–∫–∏: {missing_columns}")
            st.write("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏:", list(filtered_df.columns))
            st.write("üìÑ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:")
            st.dataframe(filtered_df.head(), use_container_width=True)
        else:
            # –°–æ–∑–¥–∞–µ–º bubble chart —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—Å–µ –∫–æ–ª–æ–Ω–∫–∏ –µ—Å—Ç—å
            try:
                fig = px.scatter(
                    filtered_df,
                    x='–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π',
                    y='–ü—Ä–æ—Ü–µ–Ω—Ç_–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö',
                    size='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å–ª—É—á–∞–µ–≤',
                    color='–ö–∞—Ç–µ–≥–æ—Ä–∏—è_—Ä–∏—Å–∫–∞',
                    hover_name='–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ',
                    hover_data={
                        '–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π': ':,.0f',
                        '–ü—Ä–æ—Ü–µ–Ω—Ç_–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö': ':,.1f',
                        '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å–ª—É—á–∞–µ–≤': ':,.0f'
                    },
                    labels={
                        '–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π': '–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –¥–æ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è (–¥–Ω–∏)',
                        '–ü—Ä–æ—Ü–µ–Ω—Ç_–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö': '–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö (%)',
                        '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å–ª—É—á–∞–µ–≤': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª—É—á–∞–µ–≤'
                    },
                    color_discrete_map={
                        '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π': '#e74c3c',
                        '–í—ã—Å–æ–∫–∏–π': '#f39c12', 
                        '–°—Ä–µ–¥–Ω–∏–π': '#f1c40f',
                        '–ù–∏–∑–∫–∏–π': '#27ae60'
                    },
                    title="–í—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫–Ω–∞ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π: —Ä–∞–∑–º–µ—Ä = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª—É—á–∞–µ–≤, —Ü–≤–µ—Ç = —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞"
                )
                
                fig.update_layout(
                    height=600,
                    showlegend=True,
                    xaxis_title="–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –¥–æ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è (–¥–Ω–∏)",
                    yaxis_title="–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö —Å–ª—É—á–∞–µ–≤ (%)"
                )
                
                st.plotly_chart(fig, use_container_width=True)
                
            except Exception as e:
                st.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞: {e}")
                st.write("üìÑ –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
                st.write("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:", filtered_df.dtypes)
                st.dataframe(filtered_df.head(), use_container_width=True)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –¥–≤—É—Ö –∫–æ–ª–æ–Ω–∫–∞—Ö
        col1, col2 = st.columns(2)
        
        with col1:
            st.subheader("‚è∞ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫–Ω–∞")
            
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–µ—Ä–∏–æ–¥–æ–≤
            critical_df = filtered_df.sort_values('–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π').head(5)
            
            for _, row in critical_df.iterrows():
                if '–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ' in row and '–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π' in row:
                    days = int(row['–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π'])
                    crime = row['–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ']
                    
                    if days <= 120:
                        color = "üî¥"
                    elif days <= 150:
                        color = "üü°"
                    else:
                        color = "üü¢"
                    
                    st.markdown(f"{color} **{crime}**: {days} –¥–Ω–µ–π")
        
        with col2:
            st.subheader("üìà –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–µ–≤–µ–Ω—Ü–∏–∏")
            
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç—É –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö
            preventable_df = filtered_df.sort_values('–ü—Ä–æ—Ü–µ–Ω—Ç_–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö', ascending=False).head(5)
            
            for _, row in preventable_df.iterrows():
                if '–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ' in row and '–ü—Ä–æ—Ü–µ–Ω—Ç_–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö' in row:
                    percent = row['–ü—Ä–æ—Ü–µ–Ω—Ç_–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö']
                    crime = row['–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ']
                    
                    if percent >= 80:
                        icon = "üéØ"
                    elif percent >= 60:
                        icon = "üé™"
                    else:
                        icon = "üìã"
                    
                    st.markdown(f"{icon} **{crime}**: {percent:.1f}% –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º–æ")
        
        # –í—Ä–µ–º–µ–Ω–Ω–∞—è —à–∫–∞–ª–∞
        st.subheader("üìÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è —à–∫–∞–ª–∞ —ç—Å–∫–∞–ª–∞—Ü–∏–∏")
        
        # –°–æ–∑–¥–∞–µ–º timeline chart
        fig_timeline = px.bar(
            filtered_df.sort_values('–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π'),
            x='–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ',
            y='–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π',
            color='–ö–∞—Ç–µ–≥–æ—Ä–∏—è_—Ä–∏—Å–∫–∞',
            title="–í—Ä–µ–º–µ–Ω–Ω–∞—è —à–∫–∞–ª–∞: –æ—Ç –±—ã—Å—Ç—Ä–æ–π –∫ –º–µ–¥–ª–µ–Ω–Ω–æ–π —ç—Å–∫–∞–ª–∞—Ü–∏–∏",
            color_discrete_map={
                '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π': '#e74c3c',
                '–í—ã—Å–æ–∫–∏–π': '#f39c12', 
                '–°—Ä–µ–¥–Ω–∏–π': '#f1c40f',
                '–ù–∏–∑–∫–∏–π': '#27ae60'
            }
        )
        
        fig_timeline.update_layout(
            height=400,
            xaxis_title="–¢–∏–ø –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è",
            yaxis_title="–î–Ω–∏ –¥–æ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è"
        )
        
        st.plotly_chart(fig_timeline, use_container_width=True)
        
        # –¢–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
        st.subheader("üìã –î–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        display_df = filtered_df.copy()
        
        if '–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π' in display_df.columns:
            display_df['–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π'] = display_df['–°—Ä–µ–¥–Ω–µ–µ_–≤—Ä–µ–º—è_–¥–Ω–µ–π'].round(0).astype(int)
        if '–ü—Ä–æ—Ü–µ–Ω—Ç_–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö' in display_df.columns:
            display_df['–ü—Ä–æ—Ü–µ–Ω—Ç_–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö'] = display_df['–ü—Ä–æ—Ü–µ–Ω—Ç_–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö'].round(1)
        
        st.dataframe(
            display_df,
            use_container_width=True,
            hide_index=True
        )
        
        # –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
        csv = display_df.to_csv(index=False).encode('utf-8')
        st.download_button(
            label="üì• –°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ CSV",
            data=csv,
            file_name=f'timeline_data_{pd.Timestamp.now().strftime("%Y%m%d_%H%M%S")}.csv',
            mime='text/csv'
        )
    
    else:
        st.warning("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏")

else:
    st.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ data/")
    
    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º—ã
    st.markdown("""
    ### üìÅ –¢—Ä–µ–±—É–µ–º—ã–µ —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö:
    –†–∞–∑–º–µ—Å—Ç–∏—Ç–µ –≤ –ø–∞–ø–∫–µ `data/`:
    - `crime_analysis_results.xlsx` (–æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞)
    - –ò–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫–Ω–∞—Ö –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–π
    
    ### üìä –§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö:
    –§–∞–π–ª –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–ª–æ–Ω–∫–∏:
    - –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è
    - –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –≤ –¥–Ω—è—Ö
    - –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–º—ã—Ö —Å–ª—É—á–∞–µ–≤
    - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª—É—á–∞–µ–≤
    """)

# –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
with st.expander("‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"):
    st.markdown("""
    **–ß—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞:**
    - –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –Ω–∞—Ä—É—à–µ–Ω–∏—è –¥–æ —Ç—è–∂–∫–æ–≥–æ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è
    - –ü—Ä–æ—Ü–µ–Ω—Ç —Å–ª—É—á–∞–µ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å
    - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞
    
    **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**
    - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    - –ù–∞–≤–æ–¥–∏—Ç–µ –∫—É—Ä—Å–æ—Ä –Ω–∞ —Ç–æ—á–∫–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    - –†–∞–∑–º–µ—Ä —Ç–æ—á–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª—É—á–∞–µ–≤
    - –¶–≤–µ—Ç —Ç–æ—á–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏
    
    **–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:**
    - –ß–µ–º –ª–µ–≤–µ–µ —Ç–æ—á–∫–∞ (–º–µ–Ω—å—à–µ –¥–Ω–µ–π), —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —ç—Å–∫–∞–ª–∞—Ü–∏—è
    - –ß–µ–º –≤—ã—à–µ —Ç–æ—á–∫–∞ (–±–æ–ª—å—à–µ %), —Ç–µ–º –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è –ø—Ä–µ–≤–µ–Ω—Ü–∏–∏
    - –ë–æ–ª—å—à–∏–µ —Ç–æ—á–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è
    """) 