"""Initial migration

Revision ID: dd2429d94074
Revises: 
Create Date: 2025-08-09 12:11:44.705395

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dd2429d94074'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('person_risk_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_iin', sa.String(length=12), nullable=False),
    sa.Column('previous_risk_score', sa.Float(), nullable=True, comment='Предыдущий риск-балл'),
    sa.Column('current_risk_score', sa.Float(), nullable=False, comment='Текущий риск-балл'),
    sa.Column('risk_change', sa.Float(), nullable=True, comment='Изменение риска (+ увеличение, - уменьшение)'),
    sa.Column('change_reason', sa.String(length=200), nullable=True, comment='Причина изменения риска'),
    sa.Column('trigger_event', sa.String(length=100), nullable=True, comment='Событие спровоцировавшее пересчет'),
    sa.Column('previous_category', sa.String(length=50), nullable=True, comment='Предыдущая категория риска'),
    sa.Column('current_category', sa.String(length=50), nullable=False, comment='Текущая категория риска'),
    sa.Column('category_changed', sa.Boolean(), nullable=True, comment='Изменилась ли категория риска'),
    sa.Column('component_changes', sa.JSON(), nullable=True, comment='Изменения по компонентам риска'),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('calculated_by', sa.String(length=100), nullable=True, comment='Кто произвел пересчет'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_history_iin_timestamp', 'person_risk_history', ['person_iin', 'timestamp'], unique=False)
    op.create_index(op.f('ix_person_risk_history_id'), 'person_risk_history', ['id'], unique=False)
    op.create_index(op.f('ix_person_risk_history_person_iin'), 'person_risk_history', ['person_iin'], unique=False)
    op.create_table('risk_assessments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_iin', sa.String(length=12), nullable=False, comment='ИИН лица'),
    sa.Column('risk_score', sa.Float(), nullable=False, comment='Риск-балл 0-10 с точностью 0.01'),
    sa.Column('risk_category', sa.String(length=50), nullable=False, comment='Критический/Высокий/Средний/Низкий'),
    sa.Column('recommendation', sa.Text(), nullable=False, comment='Рекомендация по работе с лицом'),
    sa.Column('pattern_component', sa.Float(), nullable=False, comment='Компонент паттерна поведения'),
    sa.Column('history_component', sa.Float(), nullable=False, comment='Компонент истории нарушений'),
    sa.Column('time_component', sa.Float(), nullable=False, comment='Временной компонент'),
    sa.Column('age_component', sa.Float(), nullable=False, comment='Возрастной компонент'),
    sa.Column('social_component', sa.Float(), nullable=False, comment='Социальный компонент'),
    sa.Column('escalation_component', sa.Float(), nullable=False, comment='Компонент эскалации'),
    sa.Column('input_data', sa.JSON(), nullable=False, comment='Исходные данные использованные для расчета'),
    sa.Column('calculated_at', sa.DateTime(), nullable=False, comment='Время расчета'),
    sa.Column('calculated_by', sa.String(length=100), nullable=True, comment='Кто производил расчет'),
    sa.Column('version', sa.String(length=10), nullable=True, comment='Версия алгоритма расчета'),
    sa.Column('is_valid', sa.Boolean(), nullable=True, comment='Актуален ли расчет'),
    sa.Column('invalidated_at', sa.DateTime(), nullable=True, comment='Время признания недействительным'),
    sa.Column('invalidation_reason', sa.Text(), nullable=True, comment='Причина признания недействительным'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_risk_iin_date', 'risk_assessments', ['person_iin', 'calculated_at'], unique=False)
    op.create_index('idx_risk_score_category', 'risk_assessments', ['risk_score', 'risk_category'], unique=False)
    op.create_index(op.f('ix_risk_assessments_id'), 'risk_assessments', ['id'], unique=False)
    op.create_index(op.f('ix_risk_assessments_person_iin'), 'risk_assessments', ['person_iin'], unique=False)
    op.create_table('risk_calculation_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_iin', sa.String(length=12), nullable=True, comment='ИИН лица'),
    sa.Column('calculation_type', sa.String(length=50), nullable=False, comment='risk_assessment/forecast/quick'),
    sa.Column('success', sa.Boolean(), nullable=False, comment='Успешен ли расчет'),
    sa.Column('result_data', sa.JSON(), nullable=True, comment='Результат расчета'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='Сообщение об ошибке если расчет не удался'),
    sa.Column('input_data', sa.JSON(), nullable=False, comment='Данные переданные на вход'),
    sa.Column('calculation_time_ms', sa.Integer(), nullable=True, comment='Время расчета в миллисекундах'),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.String(length=100), nullable=True, comment='ID пользователя запросившего расчет'),
    sa.Column('session_id', sa.String(length=100), nullable=True, comment='ID сессии'),
    sa.Column('ip_address', sa.String(length=45), nullable=True, comment='IP адрес запроса'),
    sa.Column('algorithm_version', sa.String(length=10), nullable=True, comment='Версия алгоритма'),
    sa.Column('constants_version', sa.String(length=10), nullable=True, comment='Версия констант'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_log_timestamp_success', 'risk_calculation_logs', ['timestamp', 'success'], unique=False)
    op.create_index(op.f('ix_risk_calculation_logs_calculation_type'), 'risk_calculation_logs', ['calculation_type'], unique=False)
    op.create_index(op.f('ix_risk_calculation_logs_id'), 'risk_calculation_logs', ['id'], unique=False)
    op.create_index(op.f('ix_risk_calculation_logs_person_iin'), 'risk_calculation_logs', ['person_iin'], unique=False)
    op.create_table('risk_statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False, comment='Дата на которую рассчитана статистика'),
    sa.Column('total_assessments', sa.Integer(), nullable=False, comment='Общее количество оценок риска'),
    sa.Column('total_unique_persons', sa.Integer(), nullable=True, comment='Количество уникальных лиц'),
    sa.Column('critical_risk_count', sa.Integer(), nullable=True, comment='Критический риск (7-10)'),
    sa.Column('high_risk_count', sa.Integer(), nullable=True, comment='Высокий риск (5-6)'),
    sa.Column('medium_risk_count', sa.Integer(), nullable=True, comment='Средний риск (3-4)'),
    sa.Column('low_risk_count', sa.Integer(), nullable=True, comment='Низкий риск (0-2)'),
    sa.Column('avg_risk_score', sa.Float(), nullable=True, comment='Средний риск-балл'),
    sa.Column('median_risk_score', sa.Float(), nullable=True, comment='Медианный риск-балл'),
    sa.Column('avg_pattern_component', sa.Float(), nullable=True, comment='Средний компонент паттерна'),
    sa.Column('avg_history_component', sa.Float(), nullable=True, comment='Средний компонент истории'),
    sa.Column('avg_time_component', sa.Float(), nullable=True, comment='Средний временной компонент'),
    sa.Column('avg_age_component', sa.Float(), nullable=True, comment='Средний возрастной компонент'),
    sa.Column('avg_social_component', sa.Float(), nullable=True, comment='Средний социальный компонент'),
    sa.Column('avg_escalation_component', sa.Float(), nullable=True, comment='Средний компонент эскалации'),
    sa.Column('total_forecasts', sa.Integer(), nullable=True, comment='Общее количество прогнозов'),
    sa.Column('avg_forecast_days', sa.Float(), nullable=True, comment='Среднее количество дней до прогнозируемого события'),
    sa.Column('high_probability_forecasts', sa.Integer(), nullable=True, comment='Прогнозы с вероятностью >70%'),
    sa.Column('calculated_at', sa.DateTime(), nullable=False),
    sa.Column('version', sa.String(length=10), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_risk_statistics_date'), 'risk_statistics', ['date'], unique=False)
    op.create_index(op.f('ix_risk_statistics_id'), 'risk_statistics', ['id'], unique=False)
    op.create_table('crime_forecasts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('person_iin', sa.String(length=12), nullable=False, comment='ИИН лица'),
    sa.Column('risk_assessment_id', sa.Integer(), nullable=True, comment='Связь с оценкой риска'),
    sa.Column('crime_type', sa.String(length=50), nullable=False, comment='Тип преступления'),
    sa.Column('forecast_days', sa.Integer(), nullable=False, comment='Прогнозируемое количество дней до события'),
    sa.Column('forecast_date', sa.DateTime(), nullable=False, comment='Прогнозируемая дата события'),
    sa.Column('probability', sa.Float(), nullable=False, comment='Вероятность события в процентах 0-100'),
    sa.Column('confidence_level', sa.String(length=20), nullable=False, comment='Высокая/Средняя/Низкая'),
    sa.Column('ci_lower', sa.Integer(), nullable=False, comment='Нижняя граница доверительного интервала (дни)'),
    sa.Column('ci_upper', sa.Integer(), nullable=False, comment='Верхняя граница доверительного интервала (дни)'),
    sa.Column('timeline_risk_level', sa.String(length=50), nullable=False, comment='Критический период/Высокий риск/и т.д.'),
    sa.Column('base_days', sa.Integer(), nullable=False, comment='Базовое количество дней из исследования'),
    sa.Column('age_modifier', sa.Float(), nullable=True, comment='Возрастной модификатор'),
    sa.Column('pattern_modifier', sa.Float(), nullable=True, comment='Модификатор паттерна'),
    sa.Column('social_modifier', sa.Float(), nullable=True, comment='Социальный модификатор'),
    sa.Column('calculated_at', sa.DateTime(), nullable=False),
    sa.Column('version', sa.String(length=10), nullable=True, comment='Версия алгоритма прогнозирования'),
    sa.ForeignKeyConstraint(['risk_assessment_id'], ['risk_assessments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_forecast_date_prob', 'crime_forecasts', ['forecast_date', 'probability'], unique=False)
    op.create_index('idx_forecast_iin_crime', 'crime_forecasts', ['person_iin', 'crime_type'], unique=False)
    op.create_index(op.f('ix_crime_forecasts_crime_type'), 'crime_forecasts', ['crime_type'], unique=False)
    op.create_index(op.f('ix_crime_forecasts_id'), 'crime_forecasts', ['id'], unique=False)
    op.create_index(op.f('ix_crime_forecasts_person_iin'), 'crime_forecasts', ['person_iin'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_crime_forecasts_person_iin'), table_name='crime_forecasts')
    op.drop_index(op.f('ix_crime_forecasts_id'), table_name='crime_forecasts')
    op.drop_index(op.f('ix_crime_forecasts_crime_type'), table_name='crime_forecasts')
    op.drop_index('idx_forecast_iin_crime', table_name='crime_forecasts')
    op.drop_index('idx_forecast_date_prob', table_name='crime_forecasts')
    op.drop_table('crime_forecasts')
    op.drop_index(op.f('ix_risk_statistics_id'), table_name='risk_statistics')
    op.drop_index(op.f('ix_risk_statistics_date'), table_name='risk_statistics')
    op.drop_table('risk_statistics')
    op.drop_index(op.f('ix_risk_calculation_logs_person_iin'), table_name='risk_calculation_logs')
    op.drop_index(op.f('ix_risk_calculation_logs_id'), table_name='risk_calculation_logs')
    op.drop_index(op.f('ix_risk_calculation_logs_calculation_type'), table_name='risk_calculation_logs')
    op.drop_index('idx_log_timestamp_success', table_name='risk_calculation_logs')
    op.drop_table('risk_calculation_logs')
    op.drop_index(op.f('ix_risk_assessments_person_iin'), table_name='risk_assessments')
    op.drop_index(op.f('ix_risk_assessments_id'), table_name='risk_assessments')
    op.drop_index('idx_risk_score_category', table_name='risk_assessments')
    op.drop_index('idx_risk_iin_date', table_name='risk_assessments')
    op.drop_table('risk_assessments')
    op.drop_index(op.f('ix_person_risk_history_person_iin'), table_name='person_risk_history')
    op.drop_index(op.f('ix_person_risk_history_id'), table_name='person_risk_history')
    op.drop_index('idx_history_iin_timestamp', table_name='person_risk_history')
    op.drop_table('person_risk_history')
    # ### end Alembic commands ###
